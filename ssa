warning: in the working copy of 'AEDmacros.tex', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'main.tex', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/AEDmacros.tex b/AEDmacros.tex[m
[1mindex 7ef050e..4a306e2 100644[m
[1m--- a/AEDmacros.tex[m
[1m+++ b/AEDmacros.tex[m
[36m@@ -89,7 +89,7 @@[m
 	{\normalfont\bfseries\ttfamily\noindent aux\ }%[m
 	{\normalfont\ttfamily #1}%[m
 	\ifthenelse{\equal{#2}{}}{}{\ (#2)}\ : #3\, = \ensuremath{#4}%[m
[31m-	{\normalfont\bfseries\,;\par}%[m
[32m+[m	[32m{\normalfont\bfseries\,\par}%[m
 }[m
 [m
 \newcommand{\pred}[3]{%[m
[1mdiff --git a/main.pdf b/main.pdf[m
[1mindex 119d737..74fff19 100644[m
[1m--- a/main.pdf[m
[1m+++ b/main.pdf[m
[36m@@ -1,52 +1,57 @@[m
[31m-Trabajo pr´actico 1                 Algoritmos y Estructura de Datos[m
[32m+[m[32mTrabajo pr´actico 1                  Algoritmos y Estructura de Datos[m
 [m
 Especificaci´on y WP[m
 [m
[31m-8 de septiembre de 2024[m
[32m+[m[32m11 de septiembre de 2024[m
 [m
[31m-                         SinGrupo4[m
[32m+[m[32m                          SinGrupo4[m
 [m
[31m-        Integrante         LU             Correo electro´nico[m
[31m-Algan˜araz, Franco       001/01  francoarga10@gmail.com[m
[31m-Illescas, Marcos         390/14  marcosillescas90@gmail.com[m
[31m-Bahamonde, Matias        003/01  matubaham@gmail.com[m
[31m-Mari´on, Ian Pablo       004/01  ianfrodin@gmail.com[m
[32m+[m[32m        Integrante          LU             Correo electro´nico[m
[32m+[m[32mAlgan˜araz, Franco        001/01  francoarga10@gmail.com[m
[32m+[m[32mIllescas, Marcos          390/14  marcosillescas90@gmail.com[m
[32m+[m[32mBahamonde, Matias         694/21  matubaham@gmail.com[m
[32m+[m[32mMari´on, Ian Pablo        004/01  ianfrodin@gmail.com[m
 [m
[31m-                                 Facultad de Ciencias Exactas y Naturales[m
[31m-                                 Universidad de Buenos Aires[m
[32m+[m[32m                                  Facultad de Ciencias Exactas y Naturales[m
[32m+[m[32m                                  Universidad de Buenos Aires[m
 [m
[31m-                                 Ciudad Universitaria - (Pabello´n I/Planta Baja)[m
[31m-                                 Intendente Gu¨iraldes 2610 - C1428EGA[m
[31m-                                 Ciudad Auto´noma de Buenos Aires - Rep. Argentina[m
[31m-                                 Tel/Fax: (++54 +11) 4576-3300[m
[31m-                                 http://www.exactas.uba.ar[m
[32m+[m[32m                                  Ciudad Universitaria - (Pabello´n I/Planta Baja)[m
[32m+[m[32m                                  Intendente Gu¨iraldes 2610 - C1428EGA[m
[32m+[m[32m                                  Ciudad Auto´noma de Buenos Aires - Rep. Argentina[m
[32m+[m[32m                                  Tel/Fax: (++54 +11) 4576-3300[m
[32m+[m[32m                                  http://www.exactas.uba.ar[m
 1. Especifiaci´on[m
 [m
 1.1. grandesCiudades[m
 [m
[31m-proc grandesCiudades (in ciudades :seq⟨struct < nombre : string, habitantes : Z >⟩) : seq⟨struct < nombre : string, habitantes :[m
[32m+[m[32mproc grandesCiudades (in ciudades: seq⟨Ciudad⟩) : seq⟨Ciudad⟩[m
[32m+[m[32m         requiere {T rue}[m
[32m+[m[32m         asegura {|res| = CantidadCiudadesM ayor50000(ciudades) ∧[m
[32m+[m[32m         (∀i : Z)(0 ≤ i < |res| −→L (∃j : Z)(0 ≤ j < |ciudades| ∧L (res[i] = ciudades[j] ∧ ciudades[j].habitantes > 50000)))}[m
 [m
[31m-Z >⟩[m
[32m+[m[32maux CantidadCiudadesMayor50000 (in s: seq⟨Ciudad⟩) : Z =[m
 [m
[31m-      requiere {true}[m
[31m-[m
[31m-      asegura {|res| = (  |ciudades|−1  if  ciudades[i].habitantes  >  50000  then  1  else  0  fi) ∧L  (∀i  :  Z )(0  ≤  i  <  |res|  →  (∃j  :[m
[31m-                          i=0[m
[31m-[m
[31m-      Z)(0 ≤ j < |ciudades| ∧L res[i] = ciudades[j] ∧L ciudades[j].habitantes > 50000))}[m
[32m+[m[32m|s|−1  if  s[i].habitantes  >  50000  then  1  else  0  fi;[m
[32m+[m[32mi=0[m
 [m
 1.2. sumaDeHabitantes[m
 [m
[31m-proc sumaDeHabitantes (in menoresDeCiudades : seq⟨struct < nombre : string, habitantes : Z >⟩, in mayoresDeCiudades[m
[31m-: seq⟨struct < nombre : string, habitantes : Z >⟩) : seq⟨struct < nombre : string, habitantes : Z >⟩[m
[32m+[m[32mproc sumaDeHabitantes (in menoresDeCiudades: seq⟨Ciudad⟩, in mayoresDeCiudades: seq⟨Ciudad⟩) : seq⟨Ciudad⟩[m
[32m+[m[32m         requiere {|menoresDeCiudades| = |mayoresDeCiudades| ∧[m
[32m+[m[32m         mismosN ombres(menoresDeCiudades, mayoresDeCiudades)}[m
[32m+[m[32m         asegura {|res| = |menoresDeCiudades| ∧[m
[32m+[m[32m         (∀i : Z)(0 ≤ i < |res| −→L (∃j : Z)(∃k : Z)((0 ≤ j < |menoresDeCiudad| ∧ 0 ≤ k < |mayoresDeCiudad|) ∧L[m
[32m+[m[32m         siCoincidenN ombresSumoHabitantes(res, menoresDeCiudades, mayoresDeCiudades, i, j, k))}[m
 [m
[31m-         requiere {|menoresDeCiudades| = |mayoresDeCiudades| ∧L (∀i : Z)(0 ≤ i < |menoresDeCiudades| → (∃j : Z) ([m
[31m-      menoresDeCiudades[i].nombre = mayoresDeCiudades[j].nombre[m
[32m+[m[32mpred mismosNombres (in s: seq⟨Ciudades⟩, in t: seq⟨Ciudades⟩) {[m
[32m+[m[32m      (∀i : Z)(0 ≤ i < |s| −→L (∃j : Z)(0 ≤ j < |t| ∧L s[i].nombre = t[j].nombre))[m
 [m
[31m-         ))}[m
[31m-         asegura {|res| = |menoresDeCiudades| ∧L (∀i : Z)(0 ≤ i < |res| → (∃j, k : Z)(0 ≤ j < |menoresDeCiudad| ∧ 0 ≤[m
[31m-         k < |mayoresDeCiudad| ∧L res[i].nombre = menoresDeCiudad[j].nombre = mayoresDeCiudad[k].nombre −→L[m
[31m-         res[i].habitantes = menoresDeCiudad[j].habitantes + mayoresDeCiudad[k].habitantes))}[m
[32m+[m[32m}[m
[32m+[m[32mpred siCoincidenNombresSumoHabitantes (in s: seq⟨Ciudades⟩, in t: seq⟨Ciudades⟩, in r: seq⟨Ciudades⟩, in i: Z, in j: Z,[m
[32m+[m[32min k: Z) {[m
[32m+[m
[32m+[m[32m      (s[i].nombre = t[j].nombre ∧ s[i].nombre = r[k].nombre) −→ s[i].habitantes = t[j].habitantes + r[k].habitantes[m
[32m+[m[32m}[m
 [m
 1.3. hayCamino[m
 [m
[36m@@ -70,23 +75,23 @@[m [mproc cantidadCaminosNSaltos (in conexion : seq⟨seq⟨Z⟩⟩, in n : Z) : seq[m
 [m
 proc caminoMinimo (in origen : N, in destino : Z, in distancias : seq⟨seq⟨Z⟩⟩) : seq⟨Z⟩[m
 [m
[31m-      requiere {0 ≤ origen < |distancias| ∧ 0 ≤ destino < |distancias|}[m
[32m+[m[32mrequiere {0 ≤ origen < |distancias| ∧ 0 ≤ destino < |distancias|}[m
 [m
[31m-      asegura {(res = [ ] ⇐⇒ existeCamino(distancias, origen, destino) ∨ origen = destino) ∧ (res ̸= [ ] =⇒[m
[32m+[m[32masegura {(res = [ ] ⇐⇒ existeCamino(distancias, origen, destino) ∨ origen = destino) ∧ (res ≠ [ ] =⇒[m
 [m
[31m-      (∀camino : seq⟨Z⟩)(camino[0] = origen ∧ camino[|camino| − 1] = destino ∧ sumaDistancias(res, distancias) ≤[m
[32m+[m[32m(∀camino : seq⟨Z⟩)(camino[0] = origen ∧ camino[|camino| − 1] = destino ∧ sumaDistancias(res, distancias) ≤[m
 [m
[31m-      sumaDistancias(camino, distancias)))}[m
[32m+[m[32msumaDistancias(camino, distancias)))}[m
 [m
[31m-      aux sumaDistancia (in camino : seq⟨Z⟩, in distancias : seq⟨seq⟨Z⟩⟩) : Z =        |camino|−2       distancias[camino[i]][camino[i+[m
[31m-                                                                                       i=0[m
[32m+[m[32maux sumaDistancia (in camino : seq⟨Z⟩, in distancias : seq⟨seq⟨Z⟩⟩) : Z =   |camino|−2   distancias[camino[i]][camino[i+[m
[32m+[m[32m                                                                            i=0[m
 [m
[31m-      1]] ;[m
[32m+[m[32m1]] ;[m
 [m
 2. Demostraciones de correctitud[m
 [m
 2.1. Demostrar que la implementacio´n es correcta con respecto a la especificacio´n.[m
 2.2. Demostrar que el valor devuelto es mayor a 50.000.[m
 [m
[31m-                                             1[m
[32m+[m[32m                                                             1[m
 [m
[1mdiff --git a/main.tex b/main.tex[m
[1mindex 3a2d8cc..6373c79 100644[m
[1m--- a/main.tex[m
[1m+++ b/main.tex[m
[36m@@ -13,7 +13,7 @@[m
 [m
 \integrante{Algañaraz, Franco}{001/01}{francoarga10@gmail.com}[m
 \integrante{Illescas, Marcos}{390/14}{marcosillescas90@gmail.com}[m
[31m-\integrante{Bahamonde, Matias}{003/01}{matubaham@gmail.com}[m
[32m+[m[32m\integrante{Bahamonde, Matias}{694/21}{matubaham@gmail.com}[m
 \integrante {Marión, Ian Pablo}{004/01}{ianfrodin@gmail.com}[m
 % Pongan cuantos integrantes quieran[m
 [m
[36m@@ -30,21 +30,29 @@[m
 [m
 \subsection{grandesCiudades}[m
 [m
[31m-\begin{proc}{grandesCiudades}{\In ciudades :\TLista{struct<nombre: string, habitantes: \ent>}}{\TLista{struct<nombre: string, habitantes: \ent>}}[m
[31m-	\requiere{\True}[m
[31m-	\asegura{\longitud{res} = (\sum_{i=0}^{|ciudades|-1} \IfThenElse{ciudades[i].habitantes > 50000}{1}{0}) \yLuego [m
[31m-          (\forall i: Z)(0 \leq i < \longitud{res} \rightarrow (\exists j: Z)(0 \leq j < \longitud{ciudades} \yLuego res[i] = ciudades[j] \yLuego ciudades[j].habitantes > 50000))}[m
[32m+[m[32m\begin{proc}{grandesCiudades}{\In ciudades: \TLista{Ciudad}}{\TLista{Ciudad}}[m
[32m+[m	[32m\requiere{True}[m
[32m+[m	[32m\asegura{\longitud{res} = CantidadCiudadesMayor50000(ciudades) \; \wedge \\[m
[32m+[m[32m          (\forall i: \ent)(0 \leq i < \longitud{res} \implicaLuego (\exists j: \ent)(0 \leq j < \longitud{ciudades} \yLuego (res[i] = ciudades[j] \wedge ciudades[j].habitantes > 50000)))}[m
 \end{proc}[m
 [m
[32m+[m
[32m+[m[32m\aux{CantidadCiudadesMayor50000}{\In s: \TLista{Ciudad}}{\ent} \\ {\sum_{i=0}^{|s|-1} \IfThenElse{s[i].habitantes > 50000}{1}{0};}[m
[32m+[m
 \subsection{sumaDeHabitantes}[m
 [m
[31m-\begin{proc}{sumaDeHabitantes}{\In menoresDeCiudades : \TLista{struct<nombre: string, habitantes: \ent>}, \In mayoresDeCiudades : \TLista{struct<nombre: string, habitantes: \ent>}}{\TLista{struct<nombre: string, habitantes: \ent>}}[m
[31m-	\requiere{|menoresDeCiudades| = |mayoresDeCiudades| \yLuego [m
[31m-          (\forall i: Z)(0 \leq i < |menoresDeCiudades| \rightarrow \existe{j}{\ent}{menoresDeCiudades[i].nombre = mayoresDeCiudades[j].nombre})}[m
[31m-	\asegura{|res| = |menoresDeCiudades| \yLuego [m
[31m-          (\forall i: Z)(0 \leq i < |res| \rightarrow (\exists j,k : \ent)(0 \leq j < |menoresDeCiudad| \land 0 \leq k < |mayoresDeCiudad|\yLuego res[i].nombre = menoresDeCiudad[j].nombre = mayoresDeCiudad[k].nombre \implicaLuego res[i].habitantes = menoresDeCiudad[j].habitantes + mayoresDeCiudad[k].habitantes))}[m
[32m+[m[32m\begin{proc}{sumaDeHabitantes}{\In menoresDeCiudades: \TLista{Ciudad}, \In mayoresDeCiudades: \TLista{Ciudad}}{\TLista{Ciudad}}[m
[32m+[m	[32m\requiere{|menoresDeCiudades| = |mayoresDeCiudades| \; \; \wedge \; \; \\[m
[32m+[m[32m          mismosNombres(menoresDeCiudades, mayoresDeCiudades)}[m[41m [m
[32m+[m	[32m\asegura{|res| = |menoresDeCiudades| \; \wedge \\[m
[32m+[m[32m          (\forall i: \ent)(0 \leq i < |res| \implicaLuego (\exists j: \ent)(\exists k: \ent)((0 \leq j < |menoresDeCiudad| \; \wedge \; 0 \leq k < |mayoresDeCiudad|) \; \yLuego \\ siCoincidenNombresSumoHabitantes(res, menoresDeCiudades, mayoresDeCiudades, i, j, k))}[m
 \end{proc}[m
 [m
[32m+[m[32m\pred{mismosNombres}{\In s: \TLista{Ciudades}, \In t: \TLista{Ciudades}}{(\forall i: \ent) (0 \leq i < |s| \implicaLuego (\exists j: \ent) (0 \leq j < |t| \yLuego s[i].nombre = t[j].nombre))}[m
[32m+[m
[32m+[m[32m\pred{siCoincidenNombresSumoHabitantes}{\In s: \TLista{Ciudades}, \In t: \TLista{Ciudades}, \In r: \TLista{Ciudades}, \In i: \ent, \In j: \ent, \In k: \ent}{(s[i].nombre = t[j].nombre \; \wedge \;  s[i].nombre = r[k].nombre) \longrightarrow  s[i].habitantes = t[j].habitantes + r[k].habitantes}[m
[32m+[m
[32m+[m
 \subsection{hayCamino}[m
 [m
 \begin{proc}{hayCamino}{\In distancias : \TLista{\TLista{\ent}}, \In desde : \ent, \In hasta : \ent}{\bool}[m
